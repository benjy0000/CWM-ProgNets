Exercise 6 Plan:

Idea:

SatNav system to take in information about a road network from current cars on the road,
collate information and return a message to each car about the shortest path between its
location and desired destination.

The idea is that a car can send a packet to the Pi and get a return packet containing the
fastest route to its destination.

When a car finishes a road it sends a packet saying how long it took to drive the road,
this is also returned with a fastest route.

Currently, I assume that turning around on the road is impossible, a road has to be
completed before a change in route is possible and all to have the same speed, so if
there's no traffic then they'll take the same time (if there is traffic they would be
gauranteed to take the same time anyway).

Brief Summary:

Cars give their location (Node they'll be at once they finish the road they are on/ node
they're at)
Cars give time to travel along last road if just finished one
Pi constructs table of most recent road information
Pi calculates fastest path based on this and returns it

Representing the road network:

Network is represented by a graph, consisting of nodes and edges.
This can be mathematically expressed as an adjacency matrix, for example the ijth entry
represents the current time taken to travel from i to j. This is stored on the Pi and updated
accordingly.
For simplicity, I will assume all cars are at a node as otherwise this makes the problem much
more complex.
Cars desired destination will be given as a node.
Cars will also provide information about how long it took them to travel along the last road
they were on when they complete it

Updating the road network:

Whenever a car flags that they have completed a road, the time taken for them to travel it is
updated to the adjacency matrix. There will be a default value for each entry in the adjacency
matrix in case no car has been on a particular road recently.

Calculating fastest path:

Use a shortest path algorithm to determine the shortest path in terms of time from current node
to desired node using adjacency matrix.

Returning information:

Returns list of ij values to identify shortest path.
